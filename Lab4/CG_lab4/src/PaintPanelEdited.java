
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;
import java.util.ArrayList;
import java.util.List;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author TheProthean
 */
public class PaintPanelEdited extends javax.swing.JPanel {

    /**
     * Creates new form PaintPanelEdited
     */
    public PaintPanelEdited() {
        initComponents();
        this.scale = 1;
        setScale(scale);
        figures = new ArrayList<>();
    }
    List<Figure> figures;
    int scale;
    
    public void setScale(int scale) {
        this.scale = scale;
        this.repaint();
    }
    
    public void addFigure(Figure figure){
        figures.add(figure);
        this.repaint();
    }
    
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        AffineTransform atrans = null;
        Graphics2D g2d = (Graphics2D) g;
        atrans = AffineTransform.getScaleInstance(scale, scale);
        if (atrans != null) {
            g2d.setTransform(atrans);
        }
        for(Figure f: figures){
            f.paint(g);
        }
        int xSize = this.getWidth();
        int ySize = this.getHeight();
        g2d.setColor(Color.LIGHT_GRAY);
        g2d.setFont(new Font("TimesRoman", Font.PLAIN, 4));
        g2d.setStroke(new BasicStroke(0.1f));
        g2d.drawLine(0, 0, xSize, 0);
        g2d.drawLine(0, 0, 0, ySize);
        
        int shift = 2;
        for (int i = 1; i <= xSize / 10; i++) {
            if (shift != 3 && i * 10 >= 100) {
                shift = 3;
            }
            g.drawLine(i * 10, 2, i * 10, -2);
            g.drawString(String.valueOf(i * 10), i * 10 - shift, 6);
        }
        
        for (int i = 1; i <= ySize / 10; i++) {
            g.drawLine(-2, i * 10, 2, i * 10);
            g.drawString(String.valueOf(i * 10), 3, i * 10 + 2);
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
